package 欢乐颂._08暴力递归_动态规划;

/*
 * 题目:给定一个数组,求子数组的最大异或和
 * 	注:有个数组的异或和是数组中所有元素的数异或起来的结果
 * 
 * 思路1:暴力解:利用划分工具将,数组的所有子数组求出,然后分别结算每个子数组的异或和,利用全局最大值来记录,最后返回即可. O(N*N*N)
 * 
 * 思路2:dp法:利用动态规划解题,构建一个dp数组,数组中的第i个位置,代表的是从0到i的异或和
 * 		求以i结尾的子数组的最大异或和时,(j是从1到i遍历)可以通过dp[j-1]^dp[i]得到j到i的异或和,然后用全局最大值来接收. O(N*N)
 * 
 * 思路3:TreyTree法;分别求出0到i的异或和然后将结果添加到后缀树中,在求到第i位置时将0-i的异或和提供给前缀树,前缀树返回,0-i中最大的
 * 		异或和结果.即A^B=C--> B=A^C
 * 		之前将0-i-1 的结果已经添加到了前缀树中,然后我利用0-i的异或结果来,和之前的所有的异或结果来判断,看看是否可以得到最大的异或和
 * 		(细节问题见代码实现)
 */
public class _02子数组最大异或和 {

}
